1. 正则表达式模型 
优点：速度快：基于规则匹配，无需模型推理，响应极快。可解释性强：规则明确，易于理解和调试。资源消耗低：不依赖GPU或大内存，适合边缘设备部署
缺点：泛化能力差：只能识别预设规则中的模式，无法处理未见过的新表达。维护成本高：需手动维护规则库，难以覆盖所有语言变体。准确率有限：容易漏判或误判，尤其对复杂或模糊表达效果差
2. TF-IDF + 机器学习模型 
优点：训练和推理速度较快：基于词袋模型，计算效率高。可解释性中等：可通过特征重要性分析理解模型决策。适用于中等规模数据：对标注数据量要求不高，适合快速原型开发
缺点：特征表示能力有限：无法捕捉词序和上下文语义信息。依赖分词和停用词：中文分词误差会影响模型效果。泛化能力一般：对未见过的词语或表达方式识别能力较弱
3. BERT 模型 
优点：语义理解能力强：基于Transformer架构，能捕捉上下文信息和语义细节。准确率高：在大量标注数据上微调后，可达较高识别准确率。泛化能力好：对未见过的表达也有一定的识别能力
缺点：推理速度较慢：模型参数量大，需GPU加速才能满足实时性要求。资源消耗高：训练和推理都需要大量内存和计算资源。调依赖标注数据：需大量高质量标注数据才能发挥最佳效果
4. GPT 提示此工程模型 
优点：无需训练：直接利用预训练大模型进行少样本或零样本推理。灵活性强：可通过提示词动态调整识别逻辑和参考样本/语义理解优异：基于大模型强大的语言理解和生成能力
缺点：推理延迟高：API调用存在网络延迟，且大模型生成速度较慢成本高：依赖商用API或自建大模型服务，推理成本较高可控性差：模型输出可能存在不稳定或不符合格式要求的情况
